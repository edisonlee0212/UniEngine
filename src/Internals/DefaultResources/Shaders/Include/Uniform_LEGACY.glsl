
//Camera
layout (std140, binding = 0) uniform UE_CAMERA
{
	mat4 UE_CAMERA_PROJECTION;
	mat4 UE_CAMERA_VIEW;
	vec4 UE_CAMERA_RESERVED;
	vec3 UE_CAMERA_POSITION;
};

layout (std140, binding = 6) uniform UE_MATERIAL_BLOCK
{
	bool UE_ALBEDO_MAP_ENABLED;
	bool UE_NORMAL_MAP_ENABLED;
	bool UE_METALLIC_MAP_ENABLED;
	bool UE_ROUGHNESS_MAP_ENABLED;
	bool UE_AO_MAP_ENABLED;
	bool UE_APLHA_DISCARD_ENABLED;
	bool UE_RECEIVE_SHADOW;
	bool UE_ENABLE_SHADOW;
		
	vec4 UE_PBR_ALBEDO;
	float UE_PBR_METALLIC;
	float UE_PBR_ROUGHNESS;
	float UE_PBR_AO;
    float UE_PBR_EMISSION;
	float UE_APLHA_DISCARD_OFFSET;
};

layout (std140, binding = 7) uniform UE_ENVIRONMENTAL_BLOCK
{
	vec4 UE_ENVIRONMENTAL_BACKGROUND_COLOR;
	float UE_ENVIRONMENTAL_MAP_GAMMA;
	float UE_ENVIRONMENTAL_LIGHTING_GAMMA;
    float UE_ENVIRONMENTAL_PADDING1;
	float UE_ENVIRONMENTAL_PADDING2;
};

uniform sampler2DArray UE_DIRECTIONAL_LIGHT_SM;
uniform sampler2DArray UE_POINT_LIGHT_SM;
uniform sampler2D UE_SPOT_LIGHT_SM;

uniform sampler2D UE_ALBEDO_MAP;
uniform sampler2D UE_NORMAL_MAP;
uniform sampler2D UE_METALLIC_MAP;
uniform sampler2D UE_ROUGHNESS_MAP;
uniform sampler2D UE_AO_MAP;

uniform samplerCube UE_ENVIRONMENTAL_MAP;
uniform samplerCube UE_ENVIRONMENTAL_IRRADIANCE;
uniform samplerCube UE_ENVIRONMENTAL_PREFILERED;
uniform sampler2D UE_ENVIRONMENTAL_BRDFLUT;