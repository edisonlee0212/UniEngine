#extension GL_ARB_bindless_texture : require

#define UE_SPOT_LIGHT_SM UE_SPOT_LIGHT_SM_BT
#define UE_DIRECTIONAL_LIGHT_SM UE_DIRECTIONAL_LIGHT_SM_BT
#define UE_POINT_LIGHT_SM UE_POINT_LIGHT_SM_BT

#define UE_ALBEDO_MAP UE_ALBEDO_MAP_BT
#define UE_NORMAL_MAP UE_NORMAL_MAP_BT
#define UE_METALLIC_MAP UE_METALLIC_MAP_BT
#define UE_ROUGHNESS_MAP UE_ROUGHNESS_MAP_BT
#define UE_AO_MAP UE_AO_MAP_BT

#define UE_ENVIRONMENTAL_MAP UE_ENVIRONMENTAL_MAP_BT
#define UE_ENVIRONMENTAL_IRRADIANCE UE_ENVIRONMENTAL_IRRADIANCE_BT
#define UE_ENVIRONMENTAL_PREFILERED UE_ENVIRONMENTAL_PREFILERED_BT
#define UE_ENVIRONMENTAL_BRDFLUT UE_ENVIRONMENTAL_BRDFLUT_BT
//Camera
layout (std140, binding = 0) uniform UE_CAMERA
{
	mat4 UE_CAMERA_PROJECTION;
	mat4 UE_CAMERA_VIEW;
	vec4 UE_CAMERA_RESERVED;
	vec3 UE_CAMERA_POSITION;
};

layout (std140, binding = 6) uniform UE_MATERIAL_BLOCK
{
	sampler2DArray UE_DIRECTIONAL_LIGHT_SM_BT;
	sampler2DArray UE_POINT_LIGHT_SM_BT;
	sampler2D UE_SPOT_LIGHT_SM_BT;

	sampler2D UE_ALBEDO_MAP_BT;
	sampler2D UE_NORMAL_MAP_BT;
	sampler2D UE_METALLIC_MAP_BT;
	sampler2D UE_ROUGHNESS_MAP_BT;
	sampler2D UE_AO_MAP_BT;

	bool UE_ALBEDO_MAP_ENABLED;
	bool UE_NORMAL_MAP_ENABLED;
	bool UE_METALLIC_MAP_ENABLED;
	bool UE_ROUGHNESS_MAP_ENABLED;
	bool UE_AO_MAP_ENABLED;
	bool UE_APLHA_DISCARD_ENABLED;
	bool UE_RECEIVE_SHADOW;
	bool UE_ENABLE_SHADOW;
		
	vec4 UE_PBR_ALBEDO;
	float UE_PBR_METALLIC;
	float UE_PBR_ROUGHNESS;
	float UE_PBR_AO;
	float UE_APLHA_DISCARD_OFFSET;
};

layout (std140, binding = 7) uniform UE_ENVIRONMENTAL_BLOCK
{
    samplerCube UE_ENVIRONMENTAL_MAP_BT;
	samplerCube UE_ENVIRONMENTAL_IRRADIANCE_BT;
    samplerCube UE_ENVIRONMENTAL_PREFILERED_BT;
    sampler2D UE_ENVIRONMENTAL_BRDFLUT_BT;
	vec4 UE_ENVIRONMENTAL_BACKGROUND_COLOR;
};